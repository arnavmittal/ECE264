==3565== Memcheck, a memory error detector
==3565== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==3565== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==3565== Command: ./pa03
==3565== Parent PID: 562
==3565== 
--3565-- 
--3565-- Valgrind options:
--3565--    --tool=memcheck
--3565--    --leak-check=full
--3565--    --verbose
--3565--    --log-file=memcheck.log
--3565-- Contents of /proc/version:
--3565--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--3565-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--3565-- Page sizes: currently 4096, max supported 4096
--3565-- Valgrind library directory: /usr/lib64/valgrind
--3565-- Reading syms from /home/shay/a/mittal13/ECE264/solutions/ECE264Homework/PA03/pa03
--3565-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--3565--    object doesn't have a dynamic symbol table
--3565-- Reading syms from /lib64/ld-2.12.so
--3565--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--3565--   .. build-id is valid
--3565-- Scheduler: using generic scheduler lock implementation.
--3565-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==3565== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-3565-by-mittal13-on-ecegrid-thin1.ecn.purdue.edu
==3565== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-3565-by-mittal13-on-ecegrid-thin1.ecn.purdue.edu
==3565== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-3565-by-mittal13-on-ecegrid-thin1.ecn.purdue.edu
==3565== 
==3565== TO CONTROL THIS PROCESS USING vgdb (which you probably
==3565== don't want to do, unless you know exactly what you're doing,
==3565== or are doing some strange experiment):
==3565==   /usr/lib64/valgrind/../../bin/vgdb --pid=3565 ...command...
==3565== 
==3565== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==3565==   /path/to/gdb ./pa03
==3565== and then give GDB the following command
==3565==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=3565
==3565== --pid is optional if only one valgrind process is running
==3565== 
--3565-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--3565-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--3565-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--3565-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--3565-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--3565-- Reading syms from /lib64/libc-2.12.so
--3565--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--3565--   .. build-id is valid
--3565-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3565-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3565-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--3565-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3565-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--3565-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3565-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--3565-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--3565-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--3565-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--3565-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
==3565== Use of uninitialised value of size 8
==3565==    at 0x400A5C: explode (answer03.c:68)
==3565==    by 0x400740: main (pa03.c:30)
==3565== 
==3565== Invalid read of size 1
==3565==    at 0x400A5C: explode (answer03.c:68)
==3565==    by 0x400740: main (pa03.c:30)
==3565==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3565== 
==3565== 
==3565== Process terminating with default action of signal 11 (SIGSEGV)
==3565==  Access not within mapped region at address 0x0
==3565==    at 0x400A5C: explode (answer03.c:68)
==3565==    by 0x400740: main (pa03.c:30)
==3565==  If you believe this happened as a result of a stack
==3565==  overflow in your program's main thread (unlikely but
==3565==  possible), you can try to increase the size of the
==3565==  main thread stack using the --main-stacksize= flag.
==3565==  The main thread stack size used in this run was 10485760.
==3565== 
==3565== HEAP SUMMARY:
==3565==     in use at exit: 24 bytes in 1 blocks
==3565==   total heap usage: 1 allocs, 0 frees, 24 bytes allocated
==3565== 
==3565== Searching for pointers to 1 not-freed blocks
==3565== Checked 64,976 bytes
==3565== 
==3565== LEAK SUMMARY:
==3565==    definitely lost: 0 bytes in 0 blocks
==3565==    indirectly lost: 0 bytes in 0 blocks
==3565==      possibly lost: 0 bytes in 0 blocks
==3565==    still reachable: 24 bytes in 1 blocks
==3565==         suppressed: 0 bytes in 0 blocks
==3565== Reachable blocks (those to which a pointer was found) are not shown.
==3565== To see them, rerun with: --leak-check=full --show-reachable=yes
==3565== 
==3565== Use --track-origins=yes to see where uninitialised values come from
==3565== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==3565== 
==3565== 1 errors in context 1 of 2:
==3565== Invalid read of size 1
==3565==    at 0x400A5C: explode (answer03.c:68)
==3565==    by 0x400740: main (pa03.c:30)
==3565==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3565== 
==3565== 
==3565== 1 errors in context 2 of 2:
==3565== Use of uninitialised value of size 8
==3565==    at 0x400A5C: explode (answer03.c:68)
==3565==    by 0x400740: main (pa03.c:30)
==3565== 
--3565-- 
--3565-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--3565-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==3565== 
==3565== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 fr